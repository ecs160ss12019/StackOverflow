package com.stackoverflow.malwareinvaders.main_functions;

import android.content.Context;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.RectF;
import android.util.Log;

/**
 * SuperMalware is like a special boss that appears once every 30seconds. User can get super high
 * score if phoenix signal hits supermalware. Also it will randomly drop bonus item to improve
 * Phoenix state such as lives and numbers of ammo.
 */
class SuperMalware extends Entities{

    private int screenX;
    private int smSide;

    SuperMalware(int screenX, int screenY, Context mContext) {
        super();

        // This is used by SuperMalware later to decide it's X coordinates as we set Y below and Y never changes.
        this.screenX = screenX;

        // SuperMalware is going to be the same size as the Phoenix 3000.
        // Speed of SuperMalware would be faster than the MalwareApps.
        width = screenX / 8;
        height = screenX / 8;

        mRect = new RectF();

        // We will set the top and bottom location for Rect as that will never change.
        mRect.top = screenY / 20;
        mRect.bottom = mRect.top + height;

        // Set Y Coordinate for the img
        imgYCord = mRect.top;

        // The SuperMalware will stay dead until it's time to move across the screen.
        setAlive(false);

        // Set image
        setImg(BitmapFactory.decodeResource(mContext.getResources(), R.drawable.supermalware));
    }

    // This function would be used to put the SuperMalware on one side of the screen and let it update.
    void start(int side) {
        setAlive(true);

        smSide = side;

        if (smSide == 0) {
            mRect.left = 0 - width;
            mRect.right = 0;
            speed = screenX / 5;
        } else {
            mRect.left = screenX;
            mRect.right = screenX + width;
            speed = -(screenX / 5);
        }
        imgXCord = mRect.left;
    }

    // Used to update position of SuperMalware on the screen.
    void update(long fps) {
        // If SuperMalware is hit by a signal, then kill it
        //if (this.isDying()){
        //    this.die();
        //}
        if (smSide == 0) {
            mRect.left = mRect.left + (speed / fps);
            mRect.right = mRect.left + width;
        } else {
            mRect.right = mRect.right + (speed / fps);
            mRect.left = mRect.right - width;
        }
        imgXCord = mRect.left;
    }

    void reset() {
        setAlive(false);
    }

    void detectCollisions(MalwareInvader mInv){
        if (isAlive()) {
            if (smSide == 0) {
                // Check if it hit the right side of the screen
                if(getRect().left > mInv.gameConf.mScreenX) {
                    mInv.setsmTimeReset(true);
                    reset();
                }
            } else {
                // Check if it hit the left side of the screen
                if(getRect().right < 0) {
                    mInv.setsmTimeReset(true);
                    reset();
                }
            }
        }
    }

    void draw(Canvas mCanvas, Paint mPaint) {
        if (isAlive()) {
            //mCanvas.drawRect(mSuperMalware.getRect(), mPaint);
            mCanvas.drawBitmap(getImg(), getImgX(), getImgY(), mPaint);
            Log.d("SM2:", "DREW Supermalware!");
        }
    }
}
