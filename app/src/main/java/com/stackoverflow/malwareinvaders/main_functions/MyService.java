package com.stackoverflow.malwareinvaders.main_functions;

import android.app.Service;
import android.content.Intent;
import android.media.MediaPlayer;
import android.os.Binder;
import android.os.IBinder;
import android.support.annotation.Nullable;
import android.util.Log;
import android.widget.Toast;

/**
 * This is a static service class and control the background music of the game. It can be accessed
 * from all the activities we have.
 *
 * Music source : https://opengameart.org/content/hero-immortal
 */
public class MyService extends Service implements MediaPlayer.OnErrorListener{

    private final IBinder mBinder = new ServiceBinder();
    private MediaPlayer player;
    private int length = 0;

    public MyService(){
    }

    public class ServiceBinder extends Binder{
        MyService getService(){
            return MyService.this;
        }
    }

    @Override
    public IBinder onBind(Intent intent) {
        return mBinder;
    }

    @Override
    public void onCreate(){
        super.onCreate();
        player =  MediaPlayer.create(this, R.raw.background);
        player.setOnErrorListener(this);
        if (player != null){
            player.setLooping(true);
            player.setVolume(50,50);
        }
        player.setOnErrorListener(new MediaPlayer.OnErrorListener(){
            @Override
            public boolean onError(MediaPlayer mediaPlayer, int i, int i1) {
                onError(player,i,i1);
                return true;
            }
        });
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        if (player != null){
            player.start();
        }
        return START_NOT_STICKY;
    }
    public void pauseMusic() {
        if (player != null) {
            if (player.isPlaying()) {
                player.pause();
                length = player.getCurrentPosition();
            }
        }
    }

    public boolean isPlaying(){
        return player.isPlaying();
    }

    public void resumeMusic() {
        if (player != null) {
            if (!player.isPlaying()) {
                player.seekTo(length);
                player.start();
            }
        }
    }

    public void startMusic() {
        player = MediaPlayer.create(this, R.raw.background);
        player.setOnErrorListener(this);

        if (player != null) {
            player.setLooping(true);
            player.setVolume(50, 50);
            player.start();
        }

    }

    public void stopMusic() {
        if (player != null) {
            player.stop();
            player.release();
            player = null;
        }
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        if (player != null) {
            try {
                player.stop();
                player.release();
            } finally {
                player = null;
            }
        }
    }

    public boolean onError(MediaPlayer mp, int what, int extra) {
        Toast.makeText(this, "Music player failed", Toast.LENGTH_SHORT).show();
        if (player != null) {
            try {
                player.stop();
                player.release();
            } finally {
                player = null;
            }
        }
        return false;
    }
    
}
