package com.stackoverflow.malwareinvaders.main_functions;




import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Context;
import android.media.AudioAttributes;
import android.media.AudioManager;
import android.media.SoundPool;
import android.os.Build;
import android.util.Log;

import java.util.ArrayList;

public class SoundManager extends Activity {
    static public SoundPool sp;
    static boolean loaded = false;
    static int soundId[] = new int[10];
    public static void InitSound(){
        Context mContext = MIAPP.getAppContext();
        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){
            AudioAttributes audioAttributes = new AudioAttributes.Builder()
                    .setUsage(AudioAttributes.USAGE_ASSISTANCE_SONIFICATION)
                    .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION).build();

            sp = new SoundPool.Builder().setMaxStreams(5).setAudioAttributes(audioAttributes).build();
        }else{
            sp = new SoundPool(5, AudioManager.STREAM_MUSIC, 0);
        }
        sp.setOnLoadCompleteListener(new SoundPool.OnLoadCompleteListener() {
            @Override
            public void onLoadComplete(SoundPool soundPool, int i, int i1) {
                loaded = true;
            }
        });
        Log.d("sound", "load");
        soundId[0] = sp.load(mContext, R.raw.sfx_laser1,0);
    }
    SoundPool getSp(){return sp;}
    static void play(int id){
        Log.d("sound", "Value"+ soundId[id]);
        sp.play(soundId[id],1,1,0,0,1);
    }

}