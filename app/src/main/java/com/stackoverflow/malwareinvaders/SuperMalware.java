package com.stackoverflow.malwareinvaders;

import android.graphics.Bitmap;
import android.graphics.RectF;

// SuperMalware is like a special boss that appears once every 30seconds.
class SuperMalware extends Entities{

    // We need to keep track of the size of the SuperMalware and it's speed which will increase as levels increase
    private float smWidth;
    private float smHeight;
    private float smVelocity;
    private int screenX;
    private int smSide;

    // I'm going to draw a Bitmap of Android Studio on SuperMalware mRect
    private Bitmap image;
    private float imgXCord;
    private float imgYCord;

    // Some getters and setters because needs to be set original image to store it here and get to draw the image.
    Bitmap getImg(){ return image; }
    float getImgX() { return imgXCord; }
    float getImgY() { return imgYCord; }
    void setImg(Bitmap img) { image = img; }

    SuperMalware(int screenX, int screenY) {
        super();

        // This is used by SuperMalware later to decide it's X coordinates as we set Y below and Y never changes.
        this.screenX = screenX;

        // SuperMalware is going to be the same size as the Phoenix 3000.
        // Speed of SuperMalware would be faster than the MalwareApps.
        smWidth = screenX / 8;
        smHeight = screenX / 8;

        mRect = new RectF();

        // We will set the top and bottom location for Rect as that will never change.
        mRect.top = screenY / 20;
        mRect.bottom = mRect.top + smHeight;

        // Set Y Coordinate for the img
        imgYCord = mRect.top;

        // The SuperMalware will stay dead until it's time to move across the screen.
        setVisible(false);
        setDying(true);
    }

    // Simple get to return the location of SuperMalware
    RectF getRect() { return mRect; }

    // Get the side to know where the SuperMalware is headed and check Collision
    int getSide() { return smSide; }

    // THis function would be used to put the SuperMalware on one side of the screen and let it update.
    void start(int side) {
        this.setVisible(true); // Don't need to do this because update will do it with "isDying()" because of the line below.
        this.setDying(false);

        smSide = side;

        if (smSide == 0) {
            mRect.left = 0 - smWidth;
            mRect.right = 0;
            smVelocity = (screenX / 5);
        } else {
            mRect.left = screenX;
            mRect.right = screenX + smWidth;
            smVelocity = -(screenX / 5);
        }
        imgXCord = mRect.left;
    }

    // Used to update position of SuperMalware on the screen.
    void update(long fps) {

        // If SuperMalware is hit by a signal, then kill it
        if (this.isDying()){
            this.die();
        }

        if (smSide == 0) {
            mRect.left = mRect.left + (smVelocity / fps);
            mRect.right = mRect.left + smWidth;
        } else {
            mRect.right = mRect.right + (smVelocity / fps);
            mRect.left = mRect.right - smWidth;
        }
        imgXCord = mRect.left;
    }

    void reset() {
        this.setVisible(false);
        this.setDying(true);
    }
}
